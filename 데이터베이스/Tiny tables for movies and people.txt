1. 'Tilda Swinton' 배우가 출연한 모든 영화에 대해 영화 제목과 해당 배우가 

연기한 역할의 수를 출력하세요. 

-- 한 행은 (영화 제목, 역할 수) 순서쌍으로 구성됨



2. 모든 영화에서 출연한 적이 없는 배우들의 이름을 출력하세요.

-- 한 행은 배우 이름만으로 구성됨



3. 모든 배우의 이름과 그들이 출연한 작품의 제목을 출력하세요. 출연작이 없다면

null (빈 칸)로 출력되며 중복으로 출력되는 순서쌍이 없도록 합니다.

-- 한 행은 (배우 이름, 출연작 제목) 순서쌍으로 구성됨



4번부터 7번까지는 SNS에서의 좋아요와 친구에 관한 데이터베이스를 만들어주는

hw3-2.sql 파일을 이해하고 실행한 후에 과제를 수행하세요.

(편집기에서 복사해서 붙여넣은 후 실행 가능)



people_main은 개인의 (ID, 이름, 직업, 출생년도)를 저장하고,

people_friends의 (ID1, ID2)는 ID1이 ID2의 친구임을 저장합니다. ID1과 ID2가

친구이면 ID2와 ID1이 친구라는 순서쌍도 반드시 저장되어 있습니다.

people_likes의 (ID1, ID2)는 ID1이 ID2를 좋아한다는 뜻입니다. ID1이 ID2를 

좋아한다고 해서 ID2가 ID1을 좋아하는 것은 아닙니다.



4. 모든 사용자에 대해 서로 좋아하는 상태에 있는 사용자의 수와 이름을 출력하세요.

서로 좋아하는 상태에 있는 사용자의 수의 내림차순으로 정렬하고, 서로 좋아하는 

관계가 없는 사용자는 출력하면 안됩니다.

예: Betty는 Adam을 좋아하고 Adam은 Betty를 좋아하는데, Betty는 Adam 이외에 

서로 좋아하는 관계가 없으므로 전체 결과 중 (1, Betty Friedan)가 포함되어 있음

-- 한 행은 (서로 좋아하는 사용자의 수, 이름) 순서쌍으로 구성됨



5. 친구가 셋 이상 있는 모든 사람의 이름과 직업을 출력하세요. 

-- 한 행은 (이름, 직업) 순서쌍으로 구성됨



6. 본인보다 나이가 어린 사용자에게 좋아요를 받은 사용자의 이름과 출생년도를 

중복 없이 출력하세요. 이름은 오름차순으로 정렬되어야 합니다.

-- 한 행은 (이름, 출생년도)로 구성됨



7. A가 B를 좋아하지만 A와 B가 친구가 아닌 경우를 모두 찾아서 다음 네 개의

어트리뷰트를 출력하세요.  A의 이름, A의 ID, B의 ID, B의 이름

-- 한 행은 (A의 이름, A의 ID, B의 ID, B의 이름) 순서쌍으로 구성됨

